{"version":3,"sources":["components/modal/Modal.module.css","components/searchBar/SearchBar.js","components/api/api.js","components/button/Button.js","components/image/imageGalleryItem/ImageGalleryItem.js","components/image/imageGallery/ImageGallery.js","components/modal/Modal.js","App.js","index.js"],"names":["module","exports","SearchBar","state","query","handleChange","event","setState","target","value","handleSubmit","preventDefault","props","onChangeQuery","className","onSubmit","this","type","autoComplete","placeholder","onChange","Component","searchQuery","page","axios","get","then","response","data","hits","Button","fetchArticles","onClick","ImageGalleryItem","webformatURL","largeImageURL","getImage","src","alt","ImageGallery","map","id","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","console","log","onClose","handleOverlay","currentTarget","window","addEventListener","removeEventListener","createPortal","style","Overlay","App","isLoading","error","showModal","options","api","prevState","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","URL","toggleModal","prevProps","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d67e4cee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__arjiK\",\"Modal\":\"Modal_Modal__bbhyK\"};","import React, { Component } from \"react\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    query: \"\",\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState({ query: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onChangeQuery(this.state.query);\r\n    this.setState({ query: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import axios from \"axios\";\r\n\r\nconst key = \"21141418-363b708104a3c8ce92a316b99\";\r\n\r\nconst fetchArticles = ({ searchQuery = \"\", page = 1 }) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\nexport default { fetchArticles };\r\n","import React from \"react\";\r\n\r\nconst Button = ({ fetchArticles }) => {\r\n  return (\r\n    <button type=\"button\" onClick={fetchArticles}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, getImage }) => {\r\n  const getImg = () => {\r\n    getImage(largeImageURL);\r\n  };\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webformatURL}\r\n        alt=\"\"\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={getImg}\r\n      />\r\n    </li>\r\n  );\r\n};\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport ImageGaleeryItem from \"../imageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ hits, getImage }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {hits.map(({ id, webformatURL, largeImageURL }) => (\r\n        <ImageGaleeryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          getImage={getImage}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ImageGallery;\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport style from \"../modal/Modal.module.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      console.log(\"Escape\");\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  handleOverlay = (e) => {\r\n    console.log(\"bac\");\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className={style.Overlay} onClick={this.handleOverlay}>\r\n        <div className={style.Modal}>\r\n          <img src={this.props.largeImageURL} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\n\r\nimport SearchBar from \"./components/searchBar/SearchBar\";\r\nimport api from \"./components/api/api\";\r\nimport Button from \"./components/button/Button\";\r\nimport ImageGallery from \"./components/image/imageGallery/ImageGallery\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Modal from \"./components/modal/Modal\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    hits: [],\r\n    largeImageURL: \"\",\r\n    searchQuery: \"\",\r\n    page: 1,\r\n    isLoading: false,\r\n    error: null,\r\n    showModal: false,\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchArticles();\r\n    }\r\n  }\r\n  onChangeQuery = (query) => {\r\n    this.setState({ searchQuery: query, page: 1, hits: [], error: null });\r\n  };\r\n\r\n  fetchArticles = () => {\r\n    const { page, searchQuery } = this.state;\r\n    const options = { page, searchQuery };\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    api\r\n      .fetchArticles(options)\r\n      .then((hits) => {\r\n        this.setState((prevState) => ({\r\n          hits: [...prevState.hits, ...hits],\r\n          page: prevState.page + 1,\r\n        }));\r\n      })\r\n      .catch((error) => this.setState({ error }))\r\n      .finally(() => {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: \"smooth\",\r\n        });\r\n\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  getImage = (URL) => {\r\n    this.setState({\r\n      largeImageURL: URL,\r\n    });\r\n    this.toggleModal();\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { hits, isLoading, error, showModal } = this.state;\r\n    return (\r\n      <>\r\n        {error && <h2>Error</h2>}\r\n        <SearchBar onChangeQuery={this.onChangeQuery} />\r\n        {isLoading && <Loader />}\r\n\r\n        <ImageGallery hits={hits} getImage={this.getImage} />\r\n        {hits.length > 0 && <Button fetchArticles={this.fetchArticles} />}\r\n        {showModal && (\r\n          <Modal\r\n            largeImageURL={this.state.largeImageURL}\r\n            onClose={this.toggleModal}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}